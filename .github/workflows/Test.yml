name: Build SQLite3 shared libs

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl wget build-essential clang

    - name: Detect Latest SQLite Version
      id: detect
      run: |
        RAW=$(curl -s https://sqlite.org/download.html | grep -oE '[0-9]{4}/sqlite-autoconf-[0-9]{7}\.tar\.gz' | head -n1)
        YEAR=$(echo "$RAW" | cut -d/ -f1)
        VERSION=$(echo "$RAW" | grep -oE '[0-9]{7}')
        echo "URL=https://sqlite.org/$YEAR/sqlite-autoconf-$VERSION.tar.gz" >> $GITHUB_ENV
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "✅ Latest version detected: $VERSION"

    - name: Download & Extract SQLite
      run: |
        mkdir -p src
        cd src
        wget -q ${{ env.URL }} -O sqlite.tar.gz
        tar xf sqlite.tar.gz
        mv sqlite-autoconf-${{ env.VERSION }} sqlite-src

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c

    - name: Configure Environment
      id: env
      run: |
        ABI=${{ matrix.abi }}
        if [ "$ABI" = "armeabi-v7a" ]; then
          TARGET=armv7a-linux-androideabi
          API=21
        elif [ "$ABI" = "arm64-v8a" ]; then
          TARGET=aarch64-linux-android
          API=21
        elif [ "$ABI" = "x86" ]; then
          TARGET=i686-linux-android
          API=21
        elif [ "$ABI" = "x86_64" ]; then
          TARGET=x86_64-linux-android
          API=21
        else
          echo "❌ Unknown ABI $ABI"
          exit 1
        fi

        CC=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/${TARGET}${API}-clang
        echo "CC=$CC" >> $GITHUB_ENV
        echo "ABI=$ABI" >> $GITHUB_ENV

    - name: Build libsqlite3.so
      run: |
        mkdir -p output
        ${{ env.CC }} -shared -fPIC \
          src/sqlite-src/sqlite3.c \
          src/sqlite-src/shell.c \
          -I src/sqlite-src \
          -o output/libsqlite3-${{ env.ABI }}.so \
          -Os \
          -Wl,--strip-all \
          -lm -ldl \
          -DSQLITE_ENABLE_FTS3 \
          -DSQLITE_ENABLE_FTS4 \
          -DSQLITE_ENABLE_FTS5 \
          -DSQLITE_ENABLE_RTREE \
          -DSQLITE_ENABLE_JSON1 \
          -DSQLITE_ENABLE_GEOPOLY \
          -DSQLITE_THREADSAFE=1 \
          -DSQLITE_DEFAULT_FOREIGN_KEYS=1 \
          -DSQLITE_ENABLE_COLUMN_METADATA \
          -DSQLITE_ENABLE_DBSTAT_VTAB \
          -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT \
          -DSQLITE_ENABLE_LOAD_EXTENSION \
          -DSQLITE_USE_URI=1 \
          -DHAVE_READLINE=0 \
          -DSQLITE_API='__attribute__((visibility("default")))'

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: sqlite3-libs-${{ matrix.abi }}
        path: output/
